modules:
  rovo:agent:
    - key: team-management-agent
      name: "Methexis: Team Assistant"
      description: >
        An intelligent assistant dedicated to managing Jira tickets and
        supporting efficient team workflows.
      icon: resource:static-resources;Methexis.png
      prompt: |
        --- Overview ---
        You are a team management assistant for an engineering manager.
        Your primary role is to help optimize team productivity by identifying duplicate tickets,
        analyzing task priorities based on due dates, and ensuring that team members
        are working on the most important tasks.

        --- Task Prioritization ---
        When a user asks you to list tasks by due date, perform the following steps:
          1. Retrieve all recent tasks assigned to the specified user (e.g., Stanley) in a given Jira project.
          2. Filter the tasks to include only those in "To Do" or "Done" statuses.
          3. Sort the tasks by the due (close) date in ascending order.
          4. Calculate the remaining time until the due date (displayed in hours or days). If the due date has passed, mark the task as "Overdue".
          5. Include additional details such as task priority and labels.
          6. Format the results as a Markdown table with columns: Issue Key, Summary, Due Date, Priority, Status, Time Left, and Labels.

        --- Duplicate Ticket Detection ---
        When a user requests duplicate ticket checking, perform the following steps:
          1. Retrieve all recent tickets for the specified Jira project.
          2. Compare the summaries of each pair of tickets using a similarity metric.
          3. Flag two tickets as duplicates if their similarity score is 50% or higher.
          4. Format the results as a table with columns: Ticket 1, Ticket 2, and Similarity Score.

        --- Response Formatting and Future Integration ---
        Ensure that your response is clear and structured so that it can be easily integrated with future code enhancements.
        If no duplicate tickets are found, explicitly return a message stating that.
        If no tasks are found, return a message stating that.

        Follow these instructions closely to produce actionable results.
      conversationStarters:
        - "Check for duplicate tickets in projects"
        - "Find similar tickets in projects"
        - "List my tasks sorted by due date"
      actions:
        - check-duplicates
        - get-task-priorities

  action:
    - key: check-duplicates
      name: "Check Duplicate Tickets"
      function: check-duplicates-fn
      actionVerb: GET
      description: >
        This action retrieves recent Jira tickets from a specified project and
        compares their summaries to identify tickets that are likely duplicates.
        It returns a structured table with the results.
      inputs:
        projectKey:
          title: "Project Key"
          type: string
          required: true
          description: "The Jira project key from which to fetch tickets for duplicate checking."

    - key: get-task-priorities
      name: "Get Task Priorities"
      function: get-task-priorities-fn
      actionVerb: GET
      description: >
        This action retrieves tasks assigned to a user with "To Do" or "Done" statuses, sorts them by due date,
        and calculates remaining time until due. Results are displayed in a Markdown table with priority and labels,
        highlighting any overdue tasks.
      inputs:
        assignee:
          title: "Assignee"
          type: string
          required: true
          description: "The Jira username (or partial name) whose tasks are to be displayed. Fuzzy matching will be used to determine the correct account."
        projectKey:
          title: "Project Key"
          type: string
          required: true
          description: "The Jira project key from which to fetch tasks."


  function:
    - key: check-duplicates-fn
      handler: duplicates.checkDuplicates
    - key: get-task-priorities-fn
      handler: tasks.getTaskPriorities

app:
  runtime:
    name: nodejs22.x
  id: ari:cloud:ecosystem::app/daf3b40a-d4e8-49c5-9a96-e1fce45c2da7

permissions:
  scopes:
    - storage:app
    - read:jira-work
    - write:jira-work

resources:
  - key: static-resources
    path: static
